trigger:
- Development

pool:
  vmImage: 'ubuntu-latest'

# Dockerize and Deploy Laravel app to Azure Container Registry and App Service

variables:
  # Azure Container Registry and App Service details
  acrName: 'acrbackend'
  acrLoginServer: '$(acrName).azurecr.io'
  appServiceName: 'dealgo-backend'
  appServicePlanName: 'asp-backend'
  acrResourceGroup: 'RG-APP-DEV'
  appServiceResourceGroup: $(acrResourceGroup)
  appServiceConnection: 'SC-RG-APP-DEV'

  # Docker image details
  imageName: 'dealgo-backend'
  imageTag: '$(Build.BuildNumber).$(Build.BuildId)'
  dockerfilePath: './Dockerfile'

stages:
  - stage: Build
    displayName: Build and Push Docker Image
    jobs:
      - job: Build
        displayName: Build and Push Docker Image
        steps:
          - task: Docker@2
            displayName: Build and Push Docker image
            inputs:
              containerRegistry: '$(acrName)'
              repository: '$(imageName)'
              command: 'buildAndPush'
              Dockerfile: '$(dockerfilePath)'
              tags: '$(Build.BuildNumber).$(Build.BuildId)'
            condition: succeeded()

  - stage: Deploy
    displayName: Deploy to Azure App Service
    dependsOn: Build

    jobs:
      - job: Deploy
        displayName: Deploy to Azure App Service
        steps:
        - task: AzureWebAppContainer@1
          displayName: Deploy to Azure Web App for Containers
          inputs:
            azureSubscription: '$(appServiceConnection)'
            appName: $(appServiceName)
            imageName: $(acrName)/$(imageName):$(Build.BuildNumber).$(Build.BuildId)

      # - deployment: Deploy
      #   displayName: Deploy to Azure App Service
      #   environment:
      #     name: 'dev'
      #     resourceType: 'VirtualMachine'
      #   strategy:
      #     runOnce:
      #       deploy:
      #         steps:
      #         - task: AzureWebApp@1
      #           displayName: 'Azure Web App Deploy'
      #           inputs:
      #             azureSubscription: '$(appServiceConnection)'
      #             appType: 'webAppLinux'
      #             appName: '$(appServiceName)'
      #             runtimeStack: 'PHP|7.4'
      #             package: '$(imageName):$(imageTag)'
      #             startUpCommand: ''
